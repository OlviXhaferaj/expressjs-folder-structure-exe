name: Test GitHub Actions

on:
  push:
    branches:
      - main  # Adjust to the branch you want to trigger the workflow

# jobs:
#   test-variables:
#     runs-on: ubuntu-latest
#     steps:
#       # Step 1: Checkout the code
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       # Step 2: Set a variable using outputs
#       - name: Step 2 - Set Variable
#         id: set-variable
#         run: echo "##[set-output name=myVariable;]This is my variable value"

#       # Step 3: Use the variable set in Step 2
#       - name: Step 3 - Use Variable
#         run: echo "The variable value is: ${{ steps.set-variable.outputs.myVariable }}"


jobs:
  test-variables:
    runs-on: self-hosted  # Use a Windows runner
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Environment Variable
        shell: pwsh  # Specify the shell as PowerShell
        run: echo "MY_VAR=Hello World" >> $env:GITHUB_ENV  # Use PowerShell syntax to set the environment variable

      - name: Use Environment Variable
        shell: pwsh  # Specify the shell as PowerShell
        run: echo "The value of MY_VAR is $env:MY_VAR"  # Access the variable using PowerShell syntax